{"version":3,"file":"main.js","mappings":";wGAAA,gBACEA,KAEAC,YAAYD,GACVE,KAAKF,KAAOA,CACd,CAEOG,YACLC,QAAQC,IAAI,yCACd,E,wHCTW,EAAAC,0BAA4B,GAEzC,MAAaC,UAA4BC,MACXC,WAA5BR,YAA4BQ,EAAoBC,GAC9CC,MAAMD,GADoB,KAAAD,WAAAA,CAE5B,EAHF,uB,GCDIG,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,C,MCpBA,eACA,SAEA,WACE,MAAMG,EAAU,IAAI,EAAAC,QAAQC,QAAQtB,MACpC,UACQoB,EAAQG,MACdD,QAAQE,KAAK,E,CACb,MAAOC,GACHA,aAAa,EAAAlB,qBACfe,QAAQE,KAAKC,EAAEhB,YAEjBa,QAAQE,MAAM,E,CAEjB,EAXD,E","sources":["webpack://oidc-to/./src/command.ts","webpack://oidc-to/./src/errors.ts","webpack://oidc-to/webpack/bootstrap","webpack://oidc-to/./cli/index.ts"],"sourcesContent":["export class Command {\n  argv: string[];\n\n  constructor(argv: string[]) {\n    this.argv = argv;\n  }\n\n  public async run(): Promise<void> {\n    console.log(\"this is the future home of oidc-to CLI\");\n  }\n}\n","export const RETURN_CODE_NOT_LOGGED_IN = 10;\n\nexport class ErrorWithReturnCode extends Error {\n  constructor(public readonly returnCode: number, message: string) {\n    super(message);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","#!/usr/bin/env node\n\nimport { ErrorWithReturnCode } from '../src/errors';\nimport { Command } from '../src/command';\n\n(async () => {\n  const command = new Command(process.argv);\n  try {\n    await command.run();\n    process.exit(0);\n  } catch (e) {\n    if (e instanceof ErrorWithReturnCode) {\n      process.exit(e.returnCode);\n    }\n    process.exit(-1);\n  }\n})();\n"],"names":["argv","constructor","this","async","console","log","RETURN_CODE_NOT_LOGGED_IN","ErrorWithReturnCode","Error","returnCode","message","super","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","command","Command","process","run","exit","e"],"sourceRoot":""}